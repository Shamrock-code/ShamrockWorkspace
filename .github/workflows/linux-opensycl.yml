name: OpenSYCL linux pipeline

on:
  workflow_call:
    inputs:
      clang:
        required: true
        type: string
      os:
        required: true
        type: string
      cuda:
        required: true
        type: string
      rocm:
        required: true
        type: string


   
jobs:

  cache_opensycl:
    name: cache opensycl
    runs-on: ${{ inputs.os }}

    steps:

      - uses: actions/checkout@v3

      - name: clone OpenSycl
        run: git submodule update --init sycl_compiler_gits/opensycl 

      - name: install boost
        run: sudo apt install libboost-all-dev
        
      # cp from opensycl ci 
      - name: install Level Zero
        run : |
          wget https://github.com/oneapi-src/level-zero/releases/download/v1.2.3/level-zero-devel_1.2.3+u18.04_amd64.deb
          wget https://github.com/oneapi-src/level-zero/releases/download/v1.2.3/level-zero_1.2.3+u18.04_amd64.deb
          sudo dpkg -i ./level-zero*
          
      - name: install CUDA
        run: |
          mkdir -p /opt/OpenSYCL/cuda
          wget -q -O cuda.sh http://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda_11.0.2_450.51.05_linux.run
          sudo sh ./cuda.sh --override --silent --toolkit --no-man-page --no-drm --no-opengl-libs --installpath=/opt/OpenSYCL/cuda || true
          echo "CUDA Version ${{inputs.cuda}}" | sudo tee /opt/OpenSYCL/cuda/version.txt
      
      - name: install ROCm
        run: |
          [[ ${{inputs.rocm}} == 4.0.1 ]] && CODENAME=xenial
          [[ ${{inputs.rocm}} == 5.4.3 ]] && CODENAME=focal
          sudo apt install libnuma-dev cmake unzip
          wget -q -O - https://repo.radeon.com/rocm/rocm.gpg.key | sudo apt-key add -
          echo "deb [arch=amd64] https://repo.radeon.com/rocm/apt/${{inputs.rocm}} $CODENAME main" | sudo tee /etc/apt/sources.list.d/rocm.list
          printf 'Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600' | sudo tee /etc/apt/preferences.d/rocm-pin-600
          sudo apt update
          sudo apt install rocm-dev

      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{inputs.clang}}
          sudo apt install libclang-${{inputs.clang}}-dev clang-tools-${{inputs.clang}} libomp-${{inputs.clang}}-dev
      
      - name: install Ninja-build
        run: sudo apt install ninja-build


      - name: configure & install OpenSycl
        run: |
          cd sycl_compiler_gits/opensycl
          cmake -DCMAKE_CXX_COMPILER=/usr/bin/clang++-${{inputs.clang}} -DCLANG_EXECUTABLE_PATH=/usr/bin/clang++-${{inputs.clang}} -DLLVM_DIR=/usr/lib/llvm-${{inputs.clang}}/cmake -DCMAKE_INSTALL_PREFIX=../../sycl_compilers/opensycl .
          make -j install

      - name: 'Tar opensycl'
        run: tar -cvf opensycl.tar sycl_compilers/opensycl

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: OpenSYCL_compiler-${{ inputs.clang }}-${{ inputs.os }}-${{inputs.cuda}}-${{inputs.rocm}}
          path: opensycl.tar  